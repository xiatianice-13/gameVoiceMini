/**
 * 半受控组件
 *
 * ✔ value
 * ✔ disabled
 * ✔ checked
 * ✔ color
 * ✔ onChange
 */
import * as React from 'react';
import { noop } from '../../utils';
import Icon from '../Icon';
import View from '../View';
import styles from './styles';
class _Radio extends React.Component {
    constructor() {
        super(...arguments);
        this.state = {
            checked: false
        };
        this._simulateNativePress = () => {
            this.onPress();
        };
        this.onPress = () => {
            const { disabled, onChange = noop, value } = this.props;
            if (disabled)
                return;
            if (this.state.checked)
                return;
            onChange({
                value,
                checked: !this.state.checked
            });
            this.setState({ checked: !this.state.checked });
        };
    }
    static getDerivedStateFromProps(props, state) {
        return props.checked !== state.checked
            ? {
                checked: !!props.checked
            }
            : null;
    }
    render() {
        const { style, color } = this.props;
        const isChecked = this.state.checked;
        return (React.createElement(View, { style: styles.container, onClick: this.onPress },
            React.createElement(View, { style: [styles.wrapper, isChecked && styles.wrapperChecked, isChecked && { borderColor: color }, style] },
                React.createElement(Icon, { type: "success", size: 24, color: color, style: [styles.wrapperIcon, isChecked && styles.wrapperCheckedIcon] })),
            React.createElement(View, { style: { flexGrow: 0 } }, this.props.children)));
    }
}
_Radio.displayName = '_Radio';
_Radio.defaultProps = {
    value: '',
    color: '#09BB07'
};
export default _Radio;
//# sourceMappingURL=index.js.map