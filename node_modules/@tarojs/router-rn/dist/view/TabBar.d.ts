import * as React from 'react';
import { Animated, EmitterSubscription, LayoutChangeEvent } from 'react-native';
import { EdgeInsets, WithSafeAreaInsetsProps } from 'react-native-safe-area-context';
import { TabBarOptions, TabOptions } from './TabBarItem';
interface TabBarProps extends TabBarOptions {
    state: Record<string, any>;
    navigation: any;
    descriptors: Record<string, any>;
    tabOptions: TabOptions;
}
interface TabBarState {
    visible: Animated.Value;
    isKeyboardShown: boolean;
    tabVisible: boolean;
    layout: {
        height: number;
        width: number;
    };
    insets: EdgeInsets;
}
export declare class TabBar extends React.PureComponent<TabBarProps & WithSafeAreaInsetsProps, TabBarState> {
    handleKeyboardShowEvent: EmitterSubscription;
    handleKeyboardHideEvent: EmitterSubscription;
    constructor(props: TabBarProps & WithSafeAreaInsetsProps);
    componentDidMount(): void;
    componentWillUnmount(): void;
    UNSAFE_componentWillReceiveProps(nextProps: any): void;
    handleKeyboardShow(): void;
    handleKeyboardHide(): void;
    setTabBarHidden(isHidden: boolean): void;
    isLandscape(): boolean;
    getDefaultTabBarHeight(): number;
    buildLink(name: string, params: Record<string, any>): string;
    handleLayout(e: LayoutChangeEvent): void;
    getTabBarStyle(): Record<string, string>;
    getTabIconSource(index: number, focused: boolean): {
        uri: any;
    };
    renderContent(): React.JSX.Element;
    render(): React.JSX.Element | null;
}
declare const _default: React.ForwardRefExoticComponent<TabBarProps & React.RefAttributes<unknown>>;
export default _default;
